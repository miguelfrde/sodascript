PROGRAM ::= BR | SUPERPROGRAM | BR SUPERPROGRAM

SUPERPROGRAM ::= ANYTHING | ANYTHING BR SUPERPROGRAM

BR ::= br | br BR

ANYTHING ::= INLINE_BLOCK | CLASS | CONTROL_STRUCT | FUNCTION

BLOCK_SUITE ::= BR BLOCK | BLOCK

BLOCK ::= CONTROL_STRUCT BR BLOCK | INLINE_BLOCK BR BLOCK | CONTROL_STRUCT BR | INLINE_BLOCK_SUITE

INLINE_BLOCK_SUITE ::= INLINE_BLOCK | INLINE_BLOCK BR

INLINE_BLOCK ::= ASSIGN | PRINT

PRINT ::= print PRINT_ARGS

NUMBER ::= dec_num | hex_num | bin_num | oct_num

ASSIGN_OP ::= += | -= | *= | /= | **= | %= | >>= | <<= | &= | |= | ^= | =~ | != | =

COMPARE_OP ::= > | < | >= | <= | == | != | ~= | !~

BOOLEAN_OP ::= true | false

ATTRIBUTE_ACCESSOR ::= readable | writable | attribute

NAME ::= name | name . NAME

CALLABLE_NAME ::= NAME | NAME ( ) | NAME ( FUN_ARGS )

FUN_ARGS ::= NAME | NAME , FUN_ARGS

CONTROL_STRUCT ::= IF_STMT | WHILE_STMT | UNLESS_STMT | UNTIL_STMT | FOR_STMT | CASE_STMT

ASSIGN ::= NAME ASSIGN_OP EXPR | NAME ASSIGN_OP EXPR if EXPR else EXPR

PRINT_ARGS ::= EXPR | EXPR , PRINT_ARGS

RANGE ::= RANGE_ITEM '::' RANGE_ITEM | RANGE_ITEM '::' RANGE_ITEM , RANGE_ITEM

RANGE_ITEM ::= NUMBER | CALLABLE_NAME

CLASS ::= class name BR CLASS_BODY_SUITE end

CLASS_BODY_SUITE ::= CLASS_BODY BR | CLASS_BODY BR CLASS_BODY_SUITE

CLASS_BODY ::= ATTR_ACCESSORS | METHOD

METHOD ::= FUNCTION

FUNCTION ::= function name ( PARAMETERS ) BLOCK_SUITE RETURN

PARAMETERS ::= MULTIPLE_PARAMETERS | epsilon

MULTIPLE_PARAMETERS ::= name , MULTIPLE_PARAMETERS | name

RETURN ::= end | return EXPR BR end | return EXPR end

ATTR_ACCESSORS ::= ATTRIBUTE_ACCESSOR ACCESSOR_CONTENT

ACCESSOR_CONTENT ::= name | name , ACCESSOR_CONTENT

IF_STMT ::= if EXPR do BLOCK_SUITE ELSIFS

ELSIFS ::= elsif EXPR do BLOCK_SUITE ELSIFS | ELSE

ELSE ::= else BLOCK_SUITE end | end

UNLESS_STMT ::= unless EXPR do BLOCK_SUITE ELSE

WHILE_STMT ::= while EXPR do BLOCK_SUITE end

FOR_STMT ::= for name in FOR_STMT_AUX do BLOCK_SUITE end

FOR_STMT_AUX ::= RANGE | LIST

UNTIL_STMT ::= until EXPR do BLOCK_SUITE end

CASE_STMT ::= case CALLABLE_NAME WHENS_SUITE DEFAULT

DEFAULT ::= default BLOCK_SUITE end | end

WHENS_SUITE ::= WHENS | BR WHENS

WHENS ::= WHEN_STMT | WHEN_STMT WHENS

WHEN_STMT ::= when EXPR do BLOCK_SUITE

ANY_NAME ::= string | NUMBER | CALLABLE_NAME | LIST_ACCESSOR | HASH_ACCESSOR

LIST ::= [ LIST_ARGS ] | [ ]

LIST_ARGS ::= ANY_NAME | ANY_NAME , LIST_ARGS

HASH ::= { HASH_ARGS } | {  }

HAHS_ARGS ::= ANY_NAME '::' ANY_NAME | ANY_NAME '::' ANY_NAME , HASH_ARGS

LIST_ACCESSOR ::= name [ LIST_ACCESOR_ARG ]

LIST_ACCESOR_ARG ::= NUMBER | CALLABLE_NAME | LIST_ACCESSOR | HASH_ACCESSOR

HASH_ACCESSOR ::= name { ANY_NAME }

ATOM ::= CALLABLE_NAME | string | NUMBER | ( EXPR )

EXPR ::= OR

OR ::= AND | AND or OR

AND ::= NOT | NOT and AND

NOT ::= not NOT | COMPARISON

COMPARISON ::= XOR | XOR COMPARE_OP COMPARISON

XOR ::= BITWISE_AND | BITWISE_AND ^ XOR

BITWISE_AND ::= SHIFT | SHIFT & BITWISE_AND

SHIFT ::= ARITH_EXPR | ARITH_EXPR SHIFT_OP SHIFT

SHIFT_OP ::= << | >>

ARITH_EXPR ::= TERM | TERM ARITH_OP ARITH_EXPR

ARITH_OP ::= + | -

TERM ::= FACTOR | FACTOR TERM_OP TERM

TERM_OP ::= * | / | %

FACTOR ::= FACTOR_OP FACTOR | POWER

FACTOR_OP ::= + | - | ~

POWER ::= ATOM | ATOM ** FACTOR

