class Node
  attribute left, right, value

  function init(val)
    self.value = val
  end
end

class BinaryTree
  function init(val)
    self.root  = new Node(val)
  end

  function insert(val)
    self.root = _insert(self.root, val)
  end

  function _insert(node, val)
    if node == null do
        return new Node(val)
    end
    if val < node.value do
        node.left = _insert(node.left, val)
    else
        node.right = _insert(node.right, val)
    end
    return node
  end

  function find(val)
    return _find(self.root, val)
  end

  function _find(node, val)
    if node == null do
        return -1
    elsif val < node.val do
        return _find(node.left, val)
    elsif val > node.val do
        return _find(node.right, val)
    end
    return val
  end

  function show()
    _show(self.root, 0)
  end

  function _show(node, level)
    if node == null do
      return
    end
    print '  ' * level + node.value
    _show(node.left, level + 1)
    _show(node.right, level + 1)
  end

end

b = new BinaryTree(5)
b.insert(2)
b.insert(8)
b.insert(3)
b.insert(6)
b.insert(4)
print b.find(4)
b.show()
